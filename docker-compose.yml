services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports: ["6379:6379"]

  web:
    build: .
    command: |
      bash -c '
        echo "DB is healthy via depends_on; continuing..."
        python manage.py migrate
        gunicorn config.wsgi:application -b 0.0.0.0:8000
      '
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports: ["8000:8000"]
    volumes: [".:/app"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build: .
    command: celery -A config worker -l info
    env_file: .env
    depends_on: [db, redis, web]
    volumes: [".:/app"]

  beat:
    build: .
    command: celery -A config beat -l info
    env_file: .env
    depends_on: [db, redis, web]
    volumes: [".:/app"]
